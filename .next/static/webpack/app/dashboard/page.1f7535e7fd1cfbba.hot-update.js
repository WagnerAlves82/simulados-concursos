"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/page",{

/***/ "(app-pages-browser)/./src/lib/adminService.ts":
/*!*********************************!*\
  !*** ./src/lib/adminService.ts ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AdminService: function() { return /* binding */ AdminService; }\n/* harmony export */ });\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/supabase */ \"(app-pages-browser)/./src/lib/supabase.ts\");\n\nclass AdminService {\n    async buscarEstatisticas() {\n        try {\n            const [questoes, cargos, usuarios, simulados] = await Promise.all([\n                this.supabase.from(\"questoes\").select(\"id\", {\n                    count: \"exact\"\n                }),\n                this.supabase.from(\"cargos\").select(\"id\", {\n                    count: \"exact\"\n                }),\n                this.supabase.from(\"profiles\").select(\"id\", {\n                    count: \"exact\"\n                }),\n                this.supabase.from(\"simulados\").select(\"id\", {\n                    count: \"exact\"\n                })\n            ]);\n            // Buscar questões por área\n            const { data: questoesPorArea } = await this.supabase.from(\"questoes\").select(\"\\n          area_id,\\n          areas_conhecimento(nome)\\n        \");\n            const questoesPorAreaMap = (questoesPorArea === null || questoesPorArea === void 0 ? void 0 : questoesPorArea.reduce((acc, item)=>{\n                var _item_areas_conhecimento;\n                const area = ((_item_areas_conhecimento = item.areas_conhecimento) === null || _item_areas_conhecimento === void 0 ? void 0 : _item_areas_conhecimento.nome) || \"Sem \\xe1rea\";\n                acc[area] = (acc[area] || 0) + 1;\n                return acc;\n            }, {})) || {};\n            return {\n                totalQuestoes: questoes.count || 0,\n                totalCargos: cargos.count || 0,\n                totalUsuarios: usuarios.count || 0,\n                totalSimulados: simulados.count || 0,\n                questoesPorBanca: {},\n                questoesPorArea: questoesPorAreaMap,\n                acessosRecentes: 0\n            };\n        } catch (error) {\n            console.error(\"Erro ao buscar estat\\xedsticas:\", error);\n            return {\n                totalQuestoes: 0,\n                totalCargos: 0,\n                totalUsuarios: 0,\n                totalSimulados: 0,\n                questoesPorBanca: {},\n                questoesPorArea: {},\n                acessosRecentes: 0\n            };\n        }\n    }\n    async buscarCargos() {\n        try {\n            const { data, error } = await this.supabase.from(\"cargos\").select(\"*\").eq(\"ativo\", true).order(\"nome\");\n            if (error) throw error;\n            return data || [];\n        } catch (error) {\n            console.error(\"Erro ao buscar cargos:\", error);\n            return [];\n        }\n    }\n    async buscarAreas() {\n        try {\n            const { data, error } = await this.supabase.from(\"areas_conhecimento\").select(\"*\").order(\"nome\");\n            if (error) throw error;\n            return data || [];\n        } catch (error) {\n            console.error(\"Erro ao buscar \\xe1reas:\", error);\n            return [];\n        }\n    }\n    async buscarBancas() {\n        try {\n            // Como não temos tabela de bancas separada, vamos buscar as bancas dos cargos\n            const { data, error } = await this.supabase.from(\"cargos\").select(\"banca\").not(\"banca\", \"is\", null);\n            if (error) throw error;\n            const bancasUnicas = [\n                ...new Set(data === null || data === void 0 ? void 0 : data.map((item)=>item.banca))\n            ] || [];\n            return bancasUnicas.map((banca, index)=>({\n                    id: index + 1,\n                    nome: banca,\n                    questoes: 0,\n                    ativa: true\n                }));\n        } catch (error) {\n            console.error(\"Erro ao buscar bancas:\", error);\n            return [];\n        }\n    }\n    async criarCargo(cargo) {\n        try {\n            const { data, error } = await this.supabase.from(\"cargos\").insert([\n                cargo\n            ]).select();\n            if (error) throw error;\n            return data[0];\n        } catch (error) {\n            console.error(\"Erro ao criar cargo:\", error);\n            throw error;\n        }\n    }\n    async criarArea(area) {\n        try {\n            const { data, error } = await this.supabase.from(\"areas_conhecimento\").insert([\n                area\n            ]).select();\n            if (error) throw error;\n            return data[0];\n        } catch (error) {\n            console.error(\"Erro ao criar \\xe1rea:\", error);\n            throw error;\n        }\n    }\n    async criarQuestao(questao) {\n        try {\n            const { data, error } = await this.supabase.from(\"questoes\").insert([\n                questao\n            ]).select();\n            if (error) throw error;\n            return data[0];\n        } catch (error) {\n            console.error(\"Erro ao criar quest\\xe3o:\", error);\n            throw error;\n        }\n    }\n    constructor(){\n        this.supabase = (0,_lib_supabase__WEBPACK_IMPORTED_MODULE_0__.createClient)();\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/adminService.ts\n"));

/***/ })

});