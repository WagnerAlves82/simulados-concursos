"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/simulado/page",{

/***/ "(app-pages-browser)/./src/hooks/useQuestoes.ts":
/*!**********************************!*\
  !*** ./src/hooks/useQuestoes.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useQuestoes: function() { return /* binding */ useQuestoes; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_questoesServices__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/questoesServices */ \"(app-pages-browser)/./src/lib/questoesServices.ts\");\n/* harmony import */ var _contexts_AuthProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/contexts/AuthProvider */ \"(app-pages-browser)/./src/contexts/AuthProvider.tsx\");\n// src/hooks/useQuestoes.ts - VERSÃO CORRIGIDA COMPLETA\n\n\n\nfunction useQuestoes() {\n    let cargoId = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 4;\n    const { user } = (0,_contexts_AuthProvider__WEBPACK_IMPORTED_MODULE_2__.useAuth)();\n    const [questoes, setQuestoes] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [areas, setAreas] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [lastCargoId, setLastCargoId] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    // Estados para controle do modal\n    const [questoesRespondidas, setQuestoesRespondidas] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n    const [showLoginModal, setShowLoginModal] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const questoesService = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>new _lib_questoesServices__WEBPACK_IMPORTED_MODULE_1__.QuestoesService(), []);\n    const carregarQuestoes = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async function() {\n        let forceReload = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n        // Não carregar se cargoId for inválido\n        if (!cargoId || cargoId <= 0) {\n            console.log(\"CargoId inv\\xe1lido, aguardando sele\\xe7\\xe3o...\");\n            setLoading(false);\n            return;\n        }\n        if (!forceReload && lastCargoId === cargoId && questoes.length > 0) {\n            console.log(\"Quest\\xf5es j\\xe1 carregadas para este cargo, pulando...\");\n            return;\n        }\n        try {\n            setLoading(true);\n            setError(null);\n            console.log(\"Carregando quest\\xf5es para cargo \".concat(cargoId, \"...\"));\n            await questoesService.testarConexao();\n            console.log(\"Conex\\xe3o com Supabase OK\");\n            const resultado = await questoesService.buscarQuestoesPorCargo(cargoId);\n            console.log(\"Debug - Raw resultado do service:\", {\n                questoes: resultado.questoes.slice(0, 3).map((q)=>{\n                    var _q_enunciado;\n                    return {\n                        id: q.id,\n                        area_id: q.area_id,\n                        area_nome: q.area_nome,\n                        enunciado: ((_q_enunciado = q.enunciado) === null || _q_enunciado === void 0 ? void 0 : _q_enunciado.substring(0, 50)) + \"...\"\n                    };\n                }),\n                areas: resultado.areas.map((a)=>({\n                        id: a.id,\n                        nome: a.nome,\n                        total_questoes: a.total_questoes\n                    }))\n            });\n            console.log(\"Resultado da busca:\", {\n                totalQuestoes: resultado.questoes.length,\n                totalAreas: resultado.areas.length,\n                areas: resultado.areas.map((a)=>({\n                        id: a.id,\n                        nome: a.nome,\n                        questoes: a.total_questoes\n                    }))\n            });\n            if (resultado.questoes.length === 0) {\n                console.warn(\"Nenhuma quest\\xe3o encontrada para o cargo \".concat(cargoId));\n                setError(\"Nenhuma quest\\xe3o encontrada para o cargo selecionado\");\n            } else {\n                setQuestoes(resultado.questoes) // Retorna TODAS as questões\n                ;\n                setAreas(resultado.areas);\n                setLastCargoId(cargoId);\n                console.log(\"\".concat(resultado.questoes.length, \" quest\\xf5es carregadas com sucesso\"));\n            }\n        } catch (err) {\n            console.error(\"Erro ao carregar quest\\xf5es:\", err);\n            if (err instanceof Error) {\n                if (err.message.includes(\"JWT\")) {\n                    setError(\"Erro de autentica\\xe7\\xe3o. Fa\\xe7a login novamente.\");\n                } else if (err.message.includes(\"network\") || err.message.includes(\"fetch\")) {\n                    setError(\"Erro de conex\\xe3o. Verifique sua internet.\");\n                } else {\n                    setError(\"Erro ao carregar quest\\xf5es: \".concat(err.message));\n                }\n            } else {\n                setError(\"Erro desconhecido ao carregar quest\\xf5es\");\n            }\n        } finally{\n            setLoading(false);\n        }\n    }, [\n        cargoId,\n        lastCargoId,\n        questoes.length,\n        questoesService\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (cargoId) {\n            // Limpar estado anterior quando cargo muda\n            if (lastCargoId !== cargoId) {\n                setQuestoes([]);\n                setAreas([]);\n                setError(null);\n            }\n            carregarQuestoes();\n        }\n    }, [\n        cargoId,\n        carregarQuestoes\n    ]);\n    // Gerar simulado completo com níveis de dificuldade\n    const gerarSimulado = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async function() {\n        let dificuldades = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            1,\n            2,\n            3\n        ];\n        try {\n            console.log(\"Gerando simulado para cargo \".concat(cargoId, \" com dificuldades:\"), dificuldades);\n            const questoesSimulado = await questoesService.gerarSimuladoPersonalizado(cargoId, dificuldades);\n            console.log(\"Simulado gerado: \".concat(questoesSimulado.length, \" quest\\xf5es\"));\n            return questoesSimulado;\n        } catch (err) {\n            console.error(\"Erro ao gerar simulado:\", err);\n            throw new Error(\"Erro ao gerar simulado. Tente novamente.\");\n        }\n    }, [\n        cargoId,\n        questoesService\n    ]);\n    // NOVO: Gerar simulado por área específica\n    const gerarSimuladoPorArea = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async function(areaId) {\n        let dificuldades = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [\n            1,\n            2,\n            3\n        ], limite = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 80;\n        try {\n            console.log(\"Gerando simulado da \\xe1rea \".concat(areaId, \" com \").concat(limite, \" quest\\xf5es\"));\n            // Buscar questões da área específica\n            const questoesDaArea = await questoesService.buscarQuestoesPorArea(cargoId, areaId);\n            // Filtrar por dificuldade\n            const questoesFiltradas = questoesDaArea.filter((q)=>dificuldades.includes(q.dificuldade || 2));\n            console.log(\"Quest\\xf5es filtradas por dificuldade: \".concat(questoesFiltradas.length));\n            // Embaralhar as questões\n            const questoesEmbaralhadas = questoesFiltradas.sort(()=>Math.random() - 0.5);\n            // Limitar quantidade\n            const questoesLimitadas = questoesEmbaralhadas.slice(0, limite);\n            console.log(\"Simulado por \\xe1rea gerado: \".concat(questoesLimitadas.length, \" quest\\xf5es\"));\n            return questoesLimitadas;\n        } catch (err) {\n            console.error(\"Erro ao gerar simulado por \\xe1rea:\", err);\n            throw new Error(\"Erro ao gerar simulado da \\xe1rea. Tente novamente.\");\n        }\n    }, [\n        cargoId,\n        questoesService\n    ]);\n    // Controle de questões respondidas e modal\n    const registrarQuestaoRespondida = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        // Se usuário está logado, nunca mostrar modal\n        if (user) {\n            return false;\n        }\n        const novoContador = questoesRespondidas + 1;\n        setQuestoesRespondidas(novoContador);\n        // Verificar se deve mostrar modal (após 3 questões)\n        if (novoContador >= 3) {\n            const modalInfo = await questoesService.deveExibirModalLogin(novoContador);\n            if (modalInfo.exibirModal) {\n                setShowLoginModal(true);\n                return true;\n            }\n        }\n        return false;\n    }, [\n        user,\n        questoesRespondidas,\n        questoesService\n    ]);\n    // Fechar modal\n    const fecharModal = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        setShowLoginModal(false);\n    }, []);\n    // Resetar contador após login\n    const resetarContador = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        setQuestoesRespondidas(0);\n        setShowLoginModal(false);\n    }, []);\n    // Executar reset quando usuário fizer login\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (user) {\n            resetarContador();\n        }\n    }, [\n        user,\n        resetarContador\n    ]);\n    // Obter informações do modal\n    const getInfoModal = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        return await questoesService.deveExibirModalLogin(questoesRespondidas);\n    }, [\n        questoesService,\n        questoesRespondidas\n    ]);\n    const salvarResultado = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (questoesSimulado, respostas, tempoGasto)=>{\n        if (!user) {\n            throw new Error(\"Usu\\xe1rio n\\xe3o logado\");\n        }\n        try {\n            console.log(\"Salvando resultado do simulado...\", {\n                userId: user.id,\n                cargoId,\n                totalQuestoes: questoesSimulado.length,\n                totalRespostas: Object.keys(respostas).length,\n                tempoGasto: \"\".concat(Math.floor(tempoGasto / 60), \"min \").concat(tempoGasto % 60, \"s\")\n            });\n            const simuladoId = await questoesService.salvarResultadoSimulado(user.id, cargoId, questoesSimulado, respostas, tempoGasto);\n            console.log(\"Resultado salvo com ID: \".concat(simuladoId));\n            return simuladoId;\n        } catch (err) {\n            console.error(\"Erro ao salvar resultado:\", err);\n            throw new Error(\"Erro ao salvar resultado\");\n        }\n    }, [\n        user,\n        cargoId,\n        questoesService\n    ]);\n    const carregarEstatisticas = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        if (!user) {\n            console.log(\"Usu\\xe1rio n\\xe3o logado, retornando estat\\xedsticas vazias\");\n            return [];\n        }\n        try {\n            console.log(\"Carregando estat\\xedsticas para usu\\xe1rio \".concat(user.id, \"...\"));\n            const stats = await questoesService.buscarEstatisticasUsuario(user.id, cargoId);\n            console.log(\"Estat\\xedsticas carregadas\");\n            return stats;\n        } catch (err) {\n            console.error(\"Erro ao carregar estat\\xedsticas:\", err);\n            return [];\n        }\n    }, [\n        user,\n        cargoId,\n        questoesService\n    ]);\n    const buscarQuestoesPorArea = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (areaId, limite)=>{\n        try {\n            console.log(\"Buscando quest\\xf5es da \\xe1rea \".concat(areaId, \"...\"));\n            const questoesDaArea = await questoesService.buscarQuestoesPorArea(cargoId, areaId, limite);\n            console.log(\"\".concat(questoesDaArea.length, \" quest\\xf5es encontradas para a \\xe1rea\"));\n            return questoesDaArea;\n        } catch (err) {\n            console.error(\"Erro ao buscar quest\\xf5es por \\xe1rea:\", err);\n            throw new Error(\"Erro ao buscar quest\\xf5es da \\xe1rea\");\n        }\n    }, [\n        cargoId,\n        questoesService\n    ]);\n    const estatisticas = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>{\n        if (questoes.length === 0) return null;\n        const totalPorArea = questoes.reduce((acc, q)=>{\n            acc[q.area_nome] = (acc[q.area_nome] || 0) + 1;\n            return acc;\n        }, {});\n        // Estatísticas por dificuldade\n        const totalPorDificuldade = questoes.reduce((acc, q)=>{\n            const nivel = \"N\\xedvel \".concat(q.dificuldade);\n            acc[nivel] = (acc[nivel] || 0) + 1;\n            return acc;\n        }, {});\n        return {\n            totalQuestoes: questoes.length,\n            totalAreas: areas.length,\n            questoesPorArea: totalPorArea,\n            questoesPorDificuldade: totalPorDificuldade,\n            areasDisponiveis: areas.map((a)=>({\n                    id: a.id,\n                    nome: a.nome,\n                    questoes: a.total_questoes,\n                    peso: a.peso\n                }))\n        };\n    }, [\n        questoes,\n        areas\n    ]);\n    const isReady = !loading && questoes.length > 0 && areas.length > 0;\n    return {\n        // Estados principais\n        questoes,\n        areas,\n        loading,\n        error,\n        isReady,\n        // Estados do modal\n        questoesRespondidas,\n        showLoginModal,\n        // Estatísticas\n        estatisticas,\n        // Ações\n        gerarSimulado,\n        gerarSimuladoPorArea,\n        salvarResultado,\n        carregarEstatisticas,\n        buscarQuestoesPorArea,\n        recarregar: ()=>carregarQuestoes(true),\n        // Ações do modal\n        registrarQuestaoRespondida,\n        fecharModal,\n        resetarContador,\n        getInfoModal,\n        // Debug\n        debug: {\n            cargoId,\n            totalQuestoes: questoes.length,\n            totalAreas: areas.length,\n            lastCargoId,\n            loading,\n            error,\n            isReady,\n            questoesRespondidas,\n            showLoginModal\n        }\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/useQuestoes.ts\n"));

/***/ })

});